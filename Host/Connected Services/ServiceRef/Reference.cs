//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Host.ServiceRef {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceRef.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/insertPlayers", ReplyAction="http://tempuri.org/IService1/insertPlayersResponse")]
        void insertPlayers(LiveScoreSystem.Player players);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/insertPlayers", ReplyAction="http://tempuri.org/IService1/insertPlayersResponse")]
        System.Threading.Tasks.Task insertPlayersAsync(LiveScoreSystem.Player players);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/insertTeams", ReplyAction="http://tempuri.org/IService1/insertTeamsResponse")]
        int insertTeams(LiveScoreSystem.Team teams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/insertTeams", ReplyAction="http://tempuri.org/IService1/insertTeamsResponse")]
        System.Threading.Tasks.Task<int> insertTeamsAsync(LiveScoreSystem.Team teams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/insertMatches", ReplyAction="http://tempuri.org/IService1/insertMatchesResponse")]
        int insertMatches(LiveScoreSystem.Match matches);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/insertMatches", ReplyAction="http://tempuri.org/IService1/insertMatchesResponse")]
        System.Threading.Tasks.Task<int> insertMatchesAsync(LiveScoreSystem.Match matches);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/insertCommentries", ReplyAction="http://tempuri.org/IService1/insertCommentriesResponse")]
        void insertCommentries(LiveScoreSystem.Commentry comentries);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/insertCommentries", ReplyAction="http://tempuri.org/IService1/insertCommentriesResponse")]
        System.Threading.Tasks.Task insertCommentriesAsync(LiveScoreSystem.Commentry comentries);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Host.ServiceRef.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Host.ServiceRef.IService1>, Host.ServiceRef.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void insertPlayers(LiveScoreSystem.Player players) {
            base.Channel.insertPlayers(players);
        }
        
        public System.Threading.Tasks.Task insertPlayersAsync(LiveScoreSystem.Player players) {
            return base.Channel.insertPlayersAsync(players);
        }
        
        public int insertTeams(LiveScoreSystem.Team teams) {
            return base.Channel.insertTeams(teams);
        }
        
        public System.Threading.Tasks.Task<int> insertTeamsAsync(LiveScoreSystem.Team teams) {
            return base.Channel.insertTeamsAsync(teams);
        }
        
        public int insertMatches(LiveScoreSystem.Match matches) {
            return base.Channel.insertMatches(matches);
        }
        
        public System.Threading.Tasks.Task<int> insertMatchesAsync(LiveScoreSystem.Match matches) {
            return base.Channel.insertMatchesAsync(matches);
        }
        
        public void insertCommentries(LiveScoreSystem.Commentry comentries) {
            base.Channel.insertCommentries(comentries);
        }
        
        public System.Threading.Tasks.Task insertCommentriesAsync(LiveScoreSystem.Commentry comentries) {
            return base.Channel.insertCommentriesAsync(comentries);
        }
    }
}
